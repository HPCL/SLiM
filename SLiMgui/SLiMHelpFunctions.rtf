{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\fswiss\fcharset0 Optima-Regular;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeGeneConversion(numeric$\'a0conversionFraction, numeric$\'a0meanLength)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Configure the likelihood and behavior of gene conversion events.  The probably of gene conversion occurring for any one recombination event is given by 
\f0\fs18 conversionFraction
\f2\fs20 , and the mean of the geometric distribution from which the length of the gene conversion stretch will be drawn is specified by 
\f0\fs18 meanLength
\f1\fs20 .
\i \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\i0\fs18 \cf0 (void)initializeGenomicElement(io<GenomicElementType>$\'a0genomicElementType, integer$\'a0start, integer$\'a0end)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a genomic element to the chromosome at initialization time.  The 
\f0\fs18 start
\f2\fs20  and 
\f0\fs18 end
\f2\fs20  parameters give the first and last nucleotide positions to be spanned by the new genomic element.  The new element based upon the genomic element type identified by 
\f0\fs18 genomicElementType
\f1\fs20 ,
\f2  which can be either an 
\f0\fs18 integer
\f2\fs20 , representing the ID of the desired element type, or an 
\f0\fs18 object
\f2\fs20  of type 
\f0\fs18 GenomicElementType
\f2\fs20 , specified directly.
\f1 \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (object<GenomicElementType>$)initializeGenomicElementType(is$\'a0id, io<MutationType>\'a0mutationTypes, numeric\'a0proportions)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a genomic element type at initialization time.  The 
\f0\fs18 id
\f2\fs20  must not already be used for any genomic element type in the simulation.  The 
\f0\fs18 mutationTypes
\f2\fs20  vector identifies the mutation types used by the genomic element, and the 
\f0\fs18 proportions
\f2\fs20  vector should be of equal length, specifying the relative proportion of mutations that will be draw from the corresponding mutation type.  The 
\f0\fs18 id
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  giving the ID of the new genomic element type, or a 
\f0\fs18 string
\f2\fs20  giving the name of the new genomic element type (such as 
\f0\fs18 "g5"
\f2\fs20  to specify an ID of 5).  The 
\f0\fs18 mutationTypes
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  vector representing the IDs of the desired mutation types, or an 
\f0\fs18 object
\f2\fs20  vector of 
\f0\fs18 MutationType
\f2\fs20  elements specified directly.  The global symbol for the new genomic element type is immediately available; the return value also provides the new object.
\f1 \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeMutationRate(numeric$\'a0rate)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Set the uniform mutation rate per nucleotide per generation along the chromosome.
\f1\i \
\pard\pardeftab397\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\i0\fs18 \cf0 (object<MutationType>$)initializeMutationType(is$\'a0id, numeric$\'a0dominanceCoeff, string$\'a0distributionType, ...)
\f1 \
\pard\pardeftab397\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a mutation type at initialization time.  The 
\f0\fs18 id
\f2\fs20  must not already be used for any mutation type in the simulation.  The 
\f0\fs18 id
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  giving the ID of the new mutation type, or a 
\f0\fs18 string
\f2\fs20  giving the name of the new mutation type (such as 
\f0\fs18 "m5"
\f2\fs20  to specify an ID of 5).  The 
\f0\fs18 distributionType
\f2\fs20  may be 
\f0\fs18 "f"
\f2\fs20 , in which case the ellipsis 
\f0\fs18 ...
\f2\fs20  should supply a 
\f0\fs18 numeric$
\f2\fs20  fixed selection coefficient; 
\f0\fs18 "e"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient for an exponential distribution; 
\f0\fs18 "g"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient and a 
\f0\fs18 numeric$
\f2\fs20  alpha shape parameter for a gamma distribution (using the same parameterization as the Eidos function 
\f0\fs18 rgamma()
\f2\fs20 ); 
\f0\fs18 "n"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient and a 
\f0\fs18 numeric$
\f2\fs20  sigma (standard deviation) parameter for a normal distribution; or 
\f0\fs18 "w"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  
\f3 \uc0\u955 
\f2  scale parameter and a 
\f0\fs18 numeric$
\f2\fs20  k shape parameter for a Weibull distribution.  The global symbol for the new mutation type is immediately available; the return value also provides the new object.
\f1 \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeRecombinationRate(numeric\'a0rates, [integer\'a0ends])
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Set the recombination rate per nucleotide per generation along the chromosome.  There are two ways to call this function.  If the optional 
\f0\fs18 ends
\f2\fs20  parameter is omitted, 
\f0\fs18 rates
\f2\fs20  must be a singleton value that specifies a single recombination rate to be used along the entire chromosome.  If, on the other hand, 
\f0\fs18 ends
\f2\fs20  is supplied, then 
\f0\fs18 rates
\f2\fs20  and 
\f0\fs18 ends
\f2\fs20  must be the same length, and the values in 
\f0\fs18 ends
\f2\fs20  must be specified in ascending order.  In that case, 
\f0\fs18 rates
\f2\fs20  and 
\f0\fs18 ends
\f2\fs20  taken together specify the recombination rates to be used along successive contiguous stretches of the chromosome, from beginning to end; the last position specified in 
\f0\fs18 ends
\f2\fs20  should extend to the end of the chromosome (i.e. at least to the end of the last genomic element, if not further).
\f1\i \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\i0\fs18 \cf0 (void)initializeSex(string$\'a0chromosomeType, [numeric$\'a0xDominanceCoeff])
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Enable and configure sex in the simulation.  The argument 
\f0\fs18 chromosomeType
\f2\fs20  gives the type of chromosome to be simulated; this should be 
\f0\fs18 "A"
\f2\fs20 , 
\f0\fs18 "X"
\f2\fs20 , or 
\f0\fs18 "Y"
\f2\fs20 .  If the 
\f0\fs18 chromosomeType
\f2\fs20  is 
\f0\fs18 "X"
\f2\fs20 , 
\f0\fs18 xDominanceCoeff
\f2\fs20  can optionally supply the dominance coefficient used when a mutation is present in an XY male, and is thus \'93heterozygous\'94 (but in a different sense than the heterozygosity of an XX female with one copy of the mutation).  Calling this function has the side effect of enabling sex in the simulation; individuals will be male and female (rather than hermaphroditic) regardless of the 
\f0\fs18 chromosomeType
\f2\fs20  chosen for simulation.  There is no way to disable sex once it has been enabled; if you don\'92t want to have sex, don\'92t call this function.\
}