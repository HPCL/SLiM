{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\fswiss\fcharset0 Optima-Regular;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeGeneConversion(numeric$\'a0conversionFraction, numeric$\'a0meanLength)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Configure the likelihood and behavior of gene conversion events.  The probably of gene conversion occurring for any one recombination event is given by 
\f0\fs18 conversionFraction
\f2\fs20 , and the mean of the geometric distribution from which the length of the gene conversion stretch will be drawn is specified by 
\f0\fs18 meanLength
\f2\fs20  (specified in nucleotides)
\f1 .
\i \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\i0\fs18 \cf0 (void)initializeGenomicElement(io<GenomicElementType>$\'a0genomicElementType, integer$\'a0start, integer$\'a0end)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a genomic element to the chromosome at initialization time.  The 
\f0\fs18 start
\f2\fs20  and 
\f0\fs18 end
\f2\fs20  parameters give the first and last nucleotide positions to be spanned by the new genomic element.  The new element based upon the genomic element type identified by 
\f0\fs18 genomicElementType
\f1\fs20 ,
\f2  which can be either an 
\f0\fs18 integer
\f2\fs20 , representing the ID of the desired element type, or an 
\f0\fs18 object
\f2\fs20  of type 
\f0\fs18 GenomicElementType
\f2\fs20 , specified directly.
\f1 \
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (object<GenomicElementType>$)initializeGenomicElementType(is$\'a0id, io<MutationType>\'a0mutationTypes, numeric\'a0proportions)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a genomic element type at initialization time.  The 
\f0\fs18 id
\f2\fs20  must not already be used for any genomic element type in the simulation.  The 
\f0\fs18 mutationTypes
\f2\fs20  vector identifies the mutation types used by the genomic element, and the 
\f0\fs18 proportions
\f2\fs20  vector should be of equal length, specifying the relative proportion of mutations that will be draw from the corresponding mutation type (proportions do not need to add up to one; they are interpreted relatively).  The 
\f0\fs18 id
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  giving the ID of the new genomic element type, or a 
\f0\fs18 string
\f2\fs20  giving the name of the new genomic element type (such as 
\f0\fs18 "g5"
\f2\fs20  to specify an ID of 5).  The 
\f0\fs18 mutationTypes
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  vector representing the IDs of the desired mutation types, or an 
\f0\fs18 object
\f2\fs20  vector of 
\f0\fs18 MutationType
\f2\fs20  elements specified directly.  The global symbol for the new genomic element type is immediately available; the return value also provides the new object.
\f1 \
\pard\pardeftab543\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (object<InteractionType>$)initializeInteractionType(is$\'a0id, string$\'a0spatiality, [logical$\'a0reciprocality\'a0=\'a0T], [numeric$\'a0maxDistance\'a0=\'a0INF], [string$\'a0sexSegregation\'a0=\'a0"**"])
\f1 \
\pard\pardeftab543\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add an interaction type at initialization time.  The 
\f0\fs18 id
\f2\fs20  must not already be used for any interaction type in the simulation.  The 
\f0\fs18 id
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  giving the ID of the new interaction type, or a 
\f0\fs18 string
\f2\fs20  giving the name of the new interaction type (such as 
\f0\fs18 "i5"
\f2\fs20  to specify an ID of 5).\
\pard\pardeftab397\li547\ri720\sb60\sa60\partightenfactor0
\cf0 The 
\f0\fs18 spatiality
\f2\fs20  may be 
\f0\fs18 ""
\f2\fs20 , for non-spatial interactions (i.e., interactions that do not depend upon the distance between individuals); 
\f0\fs18 "x"
\f1\fs20 ,
\f2  
\f0\fs18 "y"
\f2\fs20 , or 
\f0\fs18 "z"
\f2\fs20  for one-dimensional interactions; 
\f0\fs18 "xy"
\f2\fs20 , 
\f0\fs18 "xz"
\f2\fs20 , or 
\f0\fs18 "yz"
\f2\fs20  for two-dimensional interactions; or 
\f0\fs18 "xyz"
\f2\fs20  for three-dimensional interactions.  The dimensions referenced by spatiality must have been previously defined as spatial dimensions with 
\f0\fs18 initializeSLiMOptions()
\f2\fs20 ; if the simulation has dimensionality 
\f0\fs18 "xy"
\f2\fs20 , for example, then interactions in the simulation may have spatiality 
\f0\fs18 ""
\f2\fs20 , 
\f0\fs18 "x"
\f2\fs20 , 
\f0\fs18 "y"
\f2\fs20 , or 
\f0\fs18 "xy"
\f2\fs20 , but may not reference spatial dimension 
\i z
\i0  and thus may not have spatiality 
\f0\fs18 "xz"
\f2\fs20 , 
\f0\fs18 "yz"
\f2\fs20 , or 
\f0\fs18 "xyz"
\f1\fs20 .
\f2   If no spatial dimensions have been configured, only non-spatial interactions may be defined.\
\pard\pardeftab543\li547\ri720\sb60\sa60\partightenfactor0
\cf0 The 
\f0\fs18 reciprocality
\f2\fs20  may be 
\f0\fs18 T
\f2\fs20 , in which case the interaction is guaranteed by the user to be 
\i reciprocal
\i0 : whatever the interaction strength is for individual B upon individual A, it will be equal (in magnitude and sign) for A upon B.  This allows the 
\f0\fs18 InteractionType
\f2\fs20  to reduce the amount of computation necessary by up to a factor of two.  If 
\f0\fs18 reciprocality
\f2\fs20  is 
\f0\fs18 F
\f2\fs20 , the interaction is not guaranteed to be reciprocal and each interaction will be computed independently.  The built-in interaction formulas are all reciprocal, so this is 
\f0\fs18 T
\f2\fs20  by default, but if you implement an 
\f0\fs18 interaction()
\f2\fs20  callback, you must consider whether the callback you have implemented preserves reciprocality or not.  See below for a note regarding reciprocality in sexual simulations.  \cf2 Note: this parameter is not yet used by SLiM.
\f1 \cf0 \

\f2 The 
\f0\fs18 maxDistance
\f2\fs20  parameter supplies the maximum distance over which interactions of this type will be evaluated; at greater distances, the interaction strength is considered to be zero (for efficiency).  The default value of 
\f0\fs18 maxDistance
\f2\fs20 , 
\f0\fs18 INF
\f2\fs20  (positive infinity), indicates that there is no maximum interaction distance; note that this can make some interaction queries much less efficient, and is therefore not recommended.\
The 
\f0\fs18 sexSegregation
\f2\fs20  parameter governs the applicability of the interaction to each sex, in sexual simulations.  The default, 
\f0\fs18 "**"
\f2\fs20 , implies that the interaction is felt by both sexes (the first character of the 
\f0\fs18 string
\f2\fs20  value) and is influenced by both sexes (the second character of the 
\f0\fs18 string
\f2\fs20  value).  Either or both characters may be 
\f0\fs18 M
\f2\fs20  or 
\f0\fs18 F
\f2\fs20  instead; for example, 
\f0\fs18 "MM"
\f2\fs20  would indicate a male-male interaction, such as male-male competition, whereas 
\f0\fs18 "FM"
\f2\fs20  would indicate an interaction influencing only females that is influenced only by males, such as male mating displays that influence female attraction.  This parameter may be set only to 
\f0\fs18 "**"
\f2\fs20  unless sex has been enabled with 
\f0\fs18 initializeSex()
\f1\fs20 .
\f2   Note that a value of 
\f0\fs18 sexSegregation
\f2\fs20  other than 
\f0\fs18 "**"
\f2\fs20  may imply some degree of non-reciprocality, but it is not necessary to specify 
\f0\fs18 reciprocality
\f2\fs20  to be 
\f0\fs18 F
\f2\fs20  for this reason; SLiM will take the sex-segregation of the interaction into account for you.  The value of 
\f0\fs18 reciprocality
\f2\fs20  may therefore be interpreted as meaning: in those cases, if any, in which A interacts with B and B interacts with A, is the interaction strength guaranteed to be the same in both directions?  \cf2 Note: this parameter is not yet used by SLiM.
\f1 \cf0 \

\f2 By default, the interaction strength is 
\f0\fs18 1.0
\f2\fs20  for all interactions within 
\f0\fs18 maxDistance
\f2\fs20 .  Often it is desirable to change the interaction function using 
\f0\fs18 setInteractionFunction()
\f2\fs20 ; modifying interaction strengths can also be achieved with 
\f0\fs18 interaction()
\f2\fs20  callbacks if necessary.  In any case, interactions beyond 
\f0\fs18 maxDistance
\f2\fs20  always have a strength of 
\f0\fs18 0.0
\f2\fs20 , and the interaction strength of an individual with itself is always 
\f0\fs18 0.0
\f2\fs20 , regardless of the interaction function or callbacks.\
The global symbol for the new interaction type is immediately available; the return value also provides the new object.\
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeMutationRate(numeric$\'a0rate)
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Set the uniform mutation rate per nucleotide per generation along the chromosome.
\f1\i \
\pard\pardeftab543\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\i0\fs18 \cf0 (object<MutationType>$)initializeMutationType(is$\'a0id, numeric$\'a0dominanceCoeff, string$\'a0distributionType, ...)
\f1 \
\pard\pardeftab543\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Add a mutation type at initialization time.  The 
\f0\fs18 id
\f2\fs20  must not already be used for any mutation type in the simulation.  The 
\f0\fs18 id
\f2\fs20  parameter may be either an 
\f0\fs18 integer
\f2\fs20  giving the ID of the new mutation type, or a 
\f0\fs18 string
\f2\fs20  giving the name of the new mutation type (such as 
\f0\fs18 "m5"
\f2\fs20  to specify an ID of 5).  The 
\f0\fs18 distributionType
\f2\fs20  may be 
\f0\fs18 "f"
\f2\fs20 , in which case the ellipsis 
\f0\fs18 ...
\f2\fs20  should supply a 
\f0\fs18 numeric$
\f2\fs20  fixed selection coefficient; 
\f0\fs18 "e"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient for an exponential distribution; 
\f0\fs18 "g"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient and a 
\f0\fs18 numeric$
\f2\fs20  alpha shape parameter for a gamma distribution; 
\f0\fs18 "n"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  mean selection coefficient and a 
\f0\fs18 numeric$
\f2\fs20  sigma (standard deviation) parameter for a normal distribution; 
\f0\fs18 "w"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 numeric$
\f2\fs20  
\f3 \uc0\u955 
\f2  scale parameter and a 
\f0\fs18 numeric$
\f2\fs20  k shape parameter for a Weibull distribution; or 
\f0\fs18 "s"
\f2\fs20 , in which case the ellipsis should supply a 
\f0\fs18 string$
\f2\fs20  Eidos script parameter.  The global symbol for the new mutation type is immediately available; the return value also provides the new object.\
Note that by default, all mutations of a given mutation type will be converted into 
\f0\fs18 Substitution
\f2\fs20  objects when they reach fixation, for efficiency reasons.  If you need to disable this conversion, to keep mutations of a given type active in the simulation even after they have fixed, you can do so by setting the 
\f0\fs18 convertToSubstitution
\f2\fs20  property of 
\f0\fs18 MutationType
\f2\fs20  to 
\f0\fs18 T
\f2\fs20 .
\f1 \
\pard\pardeftab397\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeRecombinationRate(numeric\'a0rates, [Ni\'a0ends\'a0=\'a0NULL], [string$\'a0sex\'a0=\'a0"*"])
\f1 \
\pard\pardeftab397\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Set the recombination rate per nucleotide per generation along the chromosome.  There are two ways to call this function.  If the optional 
\f0\fs18 ends
\f2\fs20  parameter is 
\f0\fs18 NULL
\f2\fs20  (the default), then 
\f0\fs18 rates
\f2\fs20  must be a singleton value that specifies a single recombination rate to be used along the entire chromosome.  If, on the other hand, 
\f0\fs18 ends
\f2\fs20  is supplied, then 
\f0\fs18 rates
\f2\fs20  and 
\f0\fs18 ends
\f2\fs20  must be the same length, and the values in 
\f0\fs18 ends
\f2\fs20  must be specified in ascending order.  In that case, 
\f0\fs18 rates
\f2\fs20  and 
\f0\fs18 ends
\f2\fs20  taken together specify the recombination rates to be used along successive contiguous stretches of the chromosome, from beginning to end; the last position specified in 
\f0\fs18 ends
\f2\fs20  should extend to the end of the chromosome (i.e. at least to the end of the last genomic element, if not further).  Note that a recombination rate of 1 centimorgan/Mbp corresponds to a recombination rate of 
\f0\fs18 1e-8
\f2\fs20  in the units used by SLiM.\
For example, if the following call is made:\
\pard\pardeftab397\ri720\partightenfactor0

\f1 \cf0 	
\f0\fs18 initializeRecombinationRate(c(0, 0.5, 0), c(5000, 5001, 9999));\
\pard\pardeftab397\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 then the result is that the recombination rates between bases 
\f0\fs18 0
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 1
\f2\fs20 , 
\f0\fs18 1
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 2
\f2\fs20 , ..., 
\f0\fs18 4999
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 5000
\f2\fs20  will be 
\f0\fs18 0
\f2\fs20 , the rate between bases 
\f0\fs18 5000
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 5001
\f2\fs20  will be 
\f0\fs18 0.5
\f2\fs20 , and the rate between bases 
\f0\fs18 5001
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 5002
\f2\fs20  onward (up to 
\f0\fs18 9998
\f1\fs20 \'a0
\f2 /\'a0
\f0\fs18 9999
\f2\fs20 ) will again be 
\f0\fs18 0
\f2\fs20 .  Setting the recombination rate between one specific pair of bases to 
\f0\fs18 0.5
\f2\fs20  forces recombination to occur with a probability of 
\f0\fs18 0.5
\f2\fs20  between those bases, which effectively breaks the simulated locus into separate chromosomes at that point; this example effectively has one simulated chromosome from base position 
\f0\fs18 0
\f2\fs20  to 
\f0\fs18 5000
\f2\fs20 , and another from 
\f0\fs18 5001
\f2\fs20  to 
\f0\fs18 9999
\f1\fs20 .\

\f2 If the optional 
\f0\fs18 sex
\f2\fs20  parameter is 
\f0\fs18 "*"
\f2\fs20  (the default), then the supplied recombination rate map will be used for both sexes (which is the only option for hermaphroditic simulations).  In sexual simulations 
\f0\fs18 sex
\f2\fs20  may be 
\f0\fs18 "M"
\f2\fs20  or 
\f0\fs18 "F"
\f2\fs20  instead, in which case the supplied recombination map is used only for that sex.  In this case, two calls must be made to 
\f0\fs18 initializeRecombinationRate()
\f2\fs20 , one for each sex, even if a rate of zero is desired for the other sex; no default recombination map is supplied.\
\pard\pardeftab397\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeSex(string$\'a0chromosomeType, [numeric$\'a0xDominanceCoeff\'a0=\'a01])
\f1 \
\pard\pardeftab397\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Enable and configure sex in the simulation.  The argument 
\f0\fs18 chromosomeType
\f2\fs20  gives the type of chromosome to be simulated; this should be 
\f0\fs18 "A"
\f2\fs20 , 
\f0\fs18 "X"
\f2\fs20 , or 
\f0\fs18 "Y"
\f2\fs20 .  If the 
\f0\fs18 chromosomeType
\f2\fs20  is 
\f0\fs18 "X"
\f1\fs20 ,
\f2  the optional 
\f0\fs18 xDominanceCoeff
\f2\fs20  parameter can supply the dominance coefficient used when a mutation is present in an XY male, and is thus \'93heterozygous\'94 (but in a different sense than the heterozygosity of an XX female with one copy of the mutation).  Calling this function has the side effect of enabling sex in the simulation; individuals will be male and female (rather than hermaphroditic) regardless of the 
\f0\fs18 chromosomeType
\f2\fs20  chosen for simulation.  There is no way to disable sex once it has been enabled; if you don\'92t want to have sex, don\'92t call this function.\
\pard\pardeftab720\li720\fi-446\ri720\sb180\sa60\partightenfactor0

\f0\fs18 \cf0 (void)initializeSLiMOptions([logical$\'a0keepPedigrees\'a0=\'a0F], [string$\'a0dimensionality\'a0=\'a0""])
\f1 \
\pard\pardeftab720\li547\ri720\sb60\sa60\partightenfactor0

\f2\fs20 \cf0 Configure options for the simulation.  If 
\f0\fs18 initializeSLiMOptions()
\f2\fs20  is called at all then it must be called before any other initialization function, so that SLiM knows from the outset which optional features are enabled and which are not.\
If 
\f0\fs18 keepPedigrees
\f2\fs20  is 
\f0\fs18 T
\f2\fs20 , SLiM will keep pedigree information for every individual in the simulation, tracking the identity of its parents and grandparents.  This allows individuals to assess their degree of pedigree-based relatedness to other individuals (see 
\f0\fs18 Individual
\f2\fs20 \'92s 
\f0\fs18 relatedness()
\f2\fs20  method), as well as allowing a model to find \'93trios\'94 (two parents and an offspring they generated) using the pedigree properties of 
\f0\fs18 Individual
\f2\fs20 .  Note that pedigree-based relatedness doesn\'92t necessarily correspond to genetic relatedness, due to effects such as assortment and recombination.\
If 
\f0\fs18 dimensionality
\f2\fs20  is not 
\f0\fs18 ""
\f2\fs20 , SLiM will enable its optional \'93continuous space\'94 facility.  Three values for 
\f0\fs18 dimensionality
\f2\fs20  are presently supported: 
\f0\fs18 "x"
\f2\fs20 , 
\f0\fs18 "xy"
\f2\fs20 , and 
\f0\fs18 "xyz"
\f2\fs20 , specifying that continuous space should be enabled for one, two, or three dimensions, respectively, using (
\i x
\i0 ), (
\i x
\i0 , 
\i y
\i0 ), and (
\i x
\i0 , 
\i y
\i0 , 
\i z
\i0 ) coordinates respectively.  This has a number of side effects.  First of all, it means that the specified properties of 
\f0\fs18 Individual
\f2\fs20  (
\f0\fs18 x
\f2\fs20 , 
\f0\fs18 y
\f2\fs20 , and/or 
\f0\fs18 z
\f2\fs20 ) will be interpreted by SLiM as spatial positions; in particular, SLiMgui will use those properties to display subpopulations spatially.  Second, it allows spatial interactions to be defined, evaluated, and queried using 
\f0\fs18 initializeInteractionType()
\f2\fs20  and 
\f0\fs18 interaction()
\f2\fs20  callbacks.  And third, it enables the use of any other properties and methods related to continuous space, such as setting the spatial boundaries of subpopulations, which would otherwise raise an error.\
This function will likely be extended with further options in the future, added on to the end of the argument list.  Using named arguments with this call is recommended for readability.  Note that turning on optional features may increase the runtime and memory footprint of SLiM.\
}