VERSION HISTORY

This version history begins with the final release of version 2.0.  Versions prior to 2.0 are lost in the mists of time; since the switch from 1.8 to 2.0 was so large, it was not worth tracking all of the individual changes that were made.

Note that not every commit will be logged here; that is what the Github commit history is for.  The purpose of this file is to record major feature additions, major bug fixes, etc., so that it is easier to track down which version number a particular major change occurred in.  To that end, major changes made in the development head will be logged below; when we decide to roll a new version number and do a new release, all of those development head changes will be reassigned as belonging to the new version number.  We'll see how that goes, and whether I remember to update this file.  :->

The build numbers given here are visible in SLiMgui's about panel.  They are not visible in any way on non-OSX platforms, unfortunately, because they are maintained by a "Run Script" build phase in the Xcode project that places the current git commit count into a field in the Info.plist file of SLiMgui (and EidosScribe).  This mechanism works only on OSX, so the build number is not available on Linux and other platforms.


development head:
	added x, y, and z properties to Individual for tracking spatial location
	add continuousSpace parameter to initializeSLiMOptions() to allow simulations to register as using continuous space
	make SLiMgui display subpopulations spatially when continuous space is enabled
	fix autocompletion bug with simulation symbols
	fix an omitted case in Eidos subsetting (which raised an exception)
	optimize ifelse() and operator ! in Eidos
	change mateChoice() policy for all-zero return to be equivalent to returning float(0) – reject the first parent
	optimization for mean() in Eidos
	add InteractionType class, initializeInteractionType(), and spatial queries
	fix copy so syntax coloring gets copied to the clipboard again
	add setSpatialPosition() method to Individual
	add spatialBounds, pointInBounds(), pointReflected(), pointStopped(), pointUniform(), and setSpatialBounds() to Subpopulation


2.2.1 (build 992; Eidos version 1.2.1):
	added recipe to demonstrate forcing a pedigree during mating (recipe 13.7)
	added recipe to show suppression of baseline hermaphroditic selfing (recipe 12.4)
	added recipe for estimating model parameters with ABC (recipe 13.8)
	added tagF property to Individual
	fix code completion key binding problem on OS X 10.12
	add recipe for true local ancestry tracking (recipe 13.9)
	fix a bug preventing negative constant definitions at the command line
	generalize command-line defines to allow arbitrary expressions
	add order() function to obtain indices for sorting
	add recipe for heritability with quantitative genetics (recipe 13.10)
	add properties (color, colorSubstitution) to allow custom coloring of individuals, genomic element types, and mutation types in SLiMgui
	add recipe for custom coloring in SLiMgui (recipe 7.4)
	add/modify tests to improve code coverage
	accelerate bulk setting of some common read-write SLiM properties (up to a 3x speedup for test cases)
	switch SLiMgui over to a full document-based model (.slim files, save, revert, etc.)
	highlight the recycle button green when changes have been made to the script since the last recycle
	make multiple calls to initializeRecombinationRate() illegal, to prevent misunderstandings about how to make complex recombination maps
	speed up syntax coloring for large files
	fix hang during mate choice when all individuals are fitness <= 0.0

2.2 (build 955; Eidos version 1.2):
	added recombination() callback for individual-level recombination modifications
	add containsMarkerMutation() method to Genome
	add example recipe for recombination() callbacks, section 13.5
	fix so final output from stop(), etc., gets to the output stream
	added clock() function to Eidos for CPU time usage monitoring
	improve tick labels in SLiMgui chromosome view
	bounce the SLiMgui icon once when a run completes, for notification of the user
	add MutationRun class for storing shared runs of mutations (performance enhancement)
	add a tips/tricks window visible at startup, and make some items for it
	converted the chromosome view to draw with OpenGL (performance enhancement)
	add setValue()/getValue() dictionary capabilities to SLiMSim, Subpopulation, and Individual
	revise recipe 11.1 to use setValue()/getValue()
	add -d[efine] command-line argument for slim, to allow Eidos constants to be defined on the command line

2.1.1 (build 924; Eidos version 1.1.1):
	fix segfault with very large recombination maps (thanks Martin Petr)
	fix some bad interactions between having sex enabled and using mateChoice()/modifyChild() callbacks (thanks Nathan Oakes)
	fix a crash involving accessing the individuals of a subpop after changing the subpop size (caching bug) (thanks to Melissa Hubisz)
	sort MS output by position (fix to regression; thanks Alexandre Harris)
	add -mutationCounts method on SLiMSim, parallel to -mutationFrequencies

2.1 (build 907; Eidos version 1.1):
	Improve the fitness~time plot (display of subpopulation fitnesses, point/line plotting option)
	Fix for minor code-completion and status line bugs
	Add infinite loop prevention for mateChoice() and modifyChild() callbacks
	Add "replace" parameter to outputSample() and outputMSSample() – BREAKS BACKWARD COMPATIBILITY
	Add outputVCFSample()
	Fix a bug in Genome's -containsMutations() method that caused it to produce incorrect results if its argument was a non-singleton vector
	Add an Individual class to SLiM, and an "individuals" property to Subpopulation
	Add type Individual parameters to SLiM callbacks as needed
	Add a unique index and a tag to Mutation and Substitution
	Added mutation id to output formats and load code, so it is preserved across save/load
	The readFromPopulationFile() method of SLiMSim now sets the generation as a side effect
	Change Eidos class methods to also work as non-multicast class methods (receiving the vector of objects as an operand)
	Added size() class method in Eidos
	Make code completion smart about functions like sample() that return the same type/class they are passed
	Added sex property to Individual
	Added file output to outputMutations() and outputFixedMutations()
	Added deleteFile() function to Eidos
	Improve display of very narrow recombination regions and genomic elements
	Added DFE type 's' for user-defined scripts that generate selection coefficients
	Add script/output show/hide menu command for SLiMgui
	Add support for sex-specific recombination rates/maps
	Add runtime memory overflow checking, disabled with -x command-line flag
	Change addNewMutation() and addNewDrawnMutation() to be class methods – BREAKS BACKWARD COMPATIBILITY
	Accelerated vectorized property access for singleton properties
	Add "Open Recipe" menu in SLiMgui's File menu, for fast recipe access
	Add default arguments and named arguments to Eidos function/method dispatch
	Split ExecuteFunctionCall() into separate functions (no user-visible consequence)
	Add file output and append options to all output methods
	Add createDirectory() function to Eidos
	Add automatic pedigree tracking to the Individual class
	Add new initializeSLiMOptions() initialization function
	Add uniqueMutations property and uniqueMutationsOfType() method to Individual

2.0.4 (build 833; Eidos version 1.0.4)
	Fix issue with interleaving of output from SLiM versus Eidos
	Fix for a code completion bug with if() statements

2.0.3 (build 828; Eidos version 1.0.3):
	Greatly improved code completion facilities
	Fix for build problem on Ubuntu

2.0.2 (build 824; Eidos version 1.0.2):
	Added beep() function to Eidos
	Added setMutationType() method on Mutation
	Added binary option for outputFull()
	Added return of saved generation in readFromPopulationFile()

2.0.1 (build 815; Eidos version 1.0.1):
	Added format() to Eidos
	Fixed performance issues in SLiMgui with a very large number of subpopulations

2.0 (build 811; Eidos version 1.0):
	Version history starts.
